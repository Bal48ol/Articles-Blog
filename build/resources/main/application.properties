spring.datasource.url=jdbc:postgresql://localhost:5432/books
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

server.port=8080

spring.liquibase.enabled=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.search.backend.type = lucene
spring.jpa.properties.hibernate.search.backend.directory.root = src/main/resources/lucene/indexes

spring.docker.compose.enabled=true
spring.docker.compose.lifecycle-management=start_and_stop
spring.docker.compose.start.log-level=info
spring.docker.compose.start.command=up
spring.docker.compose.stop.timeout=10s
spring.docker.compose.stop.command=stop
spring.docker.compose.readiness.timeout=2m
spring.docker.compose.readiness.tcp.read-timeout=200ms
spring.docker.compose.readiness.tcp.connect-timeout=200ms
spring.docker.compose.readiness.wait=always

spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

chat.model=latest
chat.api.url=https://gigachat.devices.sberbank.ru/api/v1/chat/completions
chat.api.key=664316ee-21f8-4db7-8231-086f34c1ffb2

server.max-http-request-header-size=51200
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB